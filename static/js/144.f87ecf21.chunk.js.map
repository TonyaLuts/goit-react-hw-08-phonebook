{"version":3,"file":"static/js/144.f87ecf21.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","components/ContactCard/ContactCard.styled.js","components/ContactCard/ContactCard.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Loader/Loader.js","components/UserContacts/UserContacts.styled.js","components/UserContacts/UserContacts.js","pages/Contacts.js"],"sourcesContent":["import { Form as FormikForm, Field as FormikField } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n\n  padding: 40px;\n  border: 1px solid #000;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 4px;\n  font: inherit;\n  margin-bottom: 20px;\n  max-width: 400px;\n  border-radius: ${p => p.theme.spasing(1)};\n  border: 1px solid black;\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: ${p => p.theme.color.accent};\n    box-shadow: 0 0 5px ${p => p.theme.color.accent};\n  }\n`;\n\nexport const FormName = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  gap: ${p => p.theme.spasing(1)};\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  padding: ${p => p.theme.spasing(1.5)};\n  border-radius: ${p => p.theme.spasing(1)};\n  border: none;\n  background-color: ${p => p.theme.color.bg};\n  &:hover {\n    background-color: ${p => p.theme.color.accent};\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n","import { Formik } from 'formik';\nimport { Form, Field, FormName, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperation';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleAddContact = ({ name, number }) => {\n    const contactVerification = contacts.findIndex(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (contactVerification >= 0) {\n      alert(`${name} is already in contacts.`);\n      return false;\n    }\n    dispatch(\n      addContact({\n        id: nanoid(),\n        name: name,\n        number: number,\n      })\n    );\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    handleAddContact(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormName>\n          Name\n          <Field type=\"text\" name=\"name\" required />\n        </FormName>\n\n        <FormName>\n          Number\n          <Field type=\"tel\" name=\"number\" required />\n        </FormName>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spasing(2)};\n  align-items: center;\n`;\n\nexport const ContactInfo = styled.p`\n  font-size: 20px;\n`;\n\nexport const BtnDel = styled.button`\n  width: 80px;\n  padding: ${p => p.theme.spasing(1)};\n  border-radius: ${p => p.theme.spasing(1)};\n  border: none;\n  background-color: ${p => p.theme.color.bg};\n  &:hover {\n    background-color: ${p => p.theme.color.accent};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Card, BtnDel, ContactInfo } from './ContactCard.styled';\nimport { deleteContact } from '../../redux/contacts/contactsOperation';\n\nexport const ContactCard = ({ card: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  return (\n    <li>\n      <Card>\n        <ContactInfo>{name}:</ContactInfo>\n        <ContactInfo>{number}</ContactInfo>\n        <BtnDel onClick={() => dispatch(deleteContact(id))}>Delete</BtnDel>;\n      </Card>\n    </li>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListCards = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spasing(2)};\n  margin-top: ${p => p.theme.spasing(5)};\n  max-width: 500px;\n  margin-left: ${p => p.theme.spasing(10)};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ContactCard } from '../ContactCard/ContactCard';\nimport { ListCards } from './ContactList.styled';\nimport { deleteContact } from '../../redux/contacts/contactsOperation';\nimport {\n  selectContacts,\n  selectFilter,\n} from '../../redux/contacts/contactsSelectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const handleDeleteContact = idx => {\n    dispatch(deleteContact(contacts.filter(contact => contact.id !== idx)));\n  };\n\n  const getVisibleContacts = () => {\n    const newArrayContacts = contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n\n    return newArrayContacts;\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ListCards>\n      {visibleContacts.map(contact => (\n        <ContactCard\n          key={contact.id}\n          card={contact}\n          onDelete={handleDeleteContact}\n        ></ContactCard>\n      ))}\n    </ListCards>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterTitle = styled.label`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  gap: ${p => p.theme.spasing(1)};\n`;\n\nexport const FilterForm = styled.input`\n  width: 500px;\n  padding: ${p => p.theme.spasing(1)};\n  font: inherit;\n  border-radius: ${p => p.theme.spasing(1)};\n  border: 1px solid black;\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: ${p => p.theme.color.accent};\n    box-shadow: 0 0 5px ${p => p.theme.color.accent};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterTitle, FilterForm } from './Filter.styled';\nimport { searchFilter } from '../../redux/filterSlice';\nimport { selectFilter } from '../../redux/contacts/contactsSelectors';\n\nexport const FilterContact = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleSearchFilter = event => {\n    dispatch(searchFilter(event.target.value));\n  };\n\n  return (\n    <FilterTitle>\n      Find contacts by name\n      <FilterForm\n        type=\"text\"\n        value={filter}\n        onChange={handleSearchFilter}\n      ></FilterForm>\n    </FilterTitle>\n  );\n};\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: ${p => p.theme.spasing(10)};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: ${p => p.theme.spasing(5)};\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport {\n  selectContacts,\n  selectError,\n  selectLoading,\n} from '../../redux/contacts/contactsSelectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { FilterContact } from 'components/Filter/Filter';\nimport * as contactsOperation from '../../redux/contacts/contactsOperation';\nimport { Loader } from 'components/Loader/Loader';\nimport { Container } from './UserContacts.styled';\n\nexport const UserContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperation.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {contacts && (\n        <>\n          <h2>Contacts</h2>\n          <FilterContact />\n        </>\n      )}\n      {isLoading && !error && <Loader />}\n      {contacts && <ContactList></ContactList>}\n    </Container>\n  );\n};\n\n\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as contactsOperation from '../redux/contacts/contactsOperation';\nimport { UserContacts } from 'components/UserContacts/UserContacts';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperation.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <UserContacts />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Field","FormikField","_templateObject2","p","theme","spasing","color","accent","FormName","_templateObject3","Button","_templateObject4","bg","selectContacts","state","contacts","items","selectLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","name","number","onSubmit","values","_ref2","resetForm","_ref","findIndex","contact","toLowerCase","alert","concat","addContact","id","nanoid","handleAddContact","children","_jsxs","type","required","Card","ContactInfo","BtnDel","ContactCard","_ref$card","card","onClick","deleteContact","ListCards","ContactList","handleDeleteContact","idx","visibleContacts","includes","map","onDelete","FilterTitle","FilterForm","FilterContact","value","onChange","event","searchFilter","target","Loader","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Container","UserContacts","useEffect","contactsOperation","_Fragment"],"sourceRoot":""}
{"version":3,"file":"static/js/503.aa7d172b.chunk.js","mappings":"2PAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oKAOf,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,GAAG,IACvB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,GAAG,IAG5BC,EAAON,EAAAA,GAAAA,MAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,wFAIvB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAGnBG,EAAQR,EAAAA,GAAAA,MAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,qPAKd,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAKtB,SAAAF,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,MAAM,IACnB,SAAAR,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,MAAM,IAItCC,EAASZ,EAAAA,GAAAA,OAAaa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,4JAEtB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,IAAI,IACnB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAEpB,SAAAF,GAAC,OAAIA,EAAEC,MAAMM,MAAMI,EAAE,IAEnB,SAAAX,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,MAAM,I,SCrCpCI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAc,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACrC,OAAQD,GACN,IAAK,QACH,OAAOT,EAASU,GAClB,IAAK,WACH,OAAON,EAAYM,GACrB,QACE,OAEN,EASA,OACEC,EAAAA,EAAAA,MAACnC,EAAI,CAACoC,SARa,SAAAC,GACnBA,EAAEC,iBACFrB,GAASsB,EAAAA,EAAAA,IAAU,CAAEhB,MAAAA,EAAOI,SAAAA,KAC5BH,EAAS,IACTI,EAAY,GACd,EAGgCY,aAAa,MAAKC,SAAA,EAC9CN,EAAAA,EAAAA,MAAC5B,EAAI,CAAAkC,SAAA,CAAC,SAEJC,EAAAA,EAAAA,KAACjC,EAAK,CACJkC,KAAK,QACLV,KAAK,QACLC,MAAOX,EACPqB,UAAQ,EACRC,SAAUhB,QAGdM,EAAAA,EAAAA,MAAC5B,EAAI,CAAAkC,SAAA,CAAC,YAEJC,EAAAA,EAAAA,KAACjC,EAAK,CACJkC,KAAK,WACLV,KAAK,WACLC,MAAOP,EACPiB,UAAQ,EACRJ,aAAa,MACbK,SAAUhB,QAGda,EAAAA,EAAAA,KAAC7B,EAAM,CAAC8B,KAAK,SAAQF,SAAC,aAG5B,EC5CA,EARc,WACZ,OACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAC1B,EAAS,KAGhB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n\n  padding: 40px;\n  border: 1px solid #000;\n  margin-top: ${p => p.theme.spasing(10)};\n  margin-left: ${p => p.theme.spasing(10)};\n`;\n\nexport const Item = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  gap: ${p => p.theme.spasing(1)};\n`;\n\nexport const Field = styled.input`\n  padding: 4px;\n  font: inherit;\n  margin-bottom: 20px;\n  max-width: 400px;\n  border-radius: ${p => p.theme.spasing(1)};\n  border: 1px solid black;\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: ${p => p.theme.color.accent};\n    box-shadow: 0 0 5px ${p => p.theme.color.accent};\n  }\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  padding: ${p => p.theme.spasing(1.5)};\n  border-radius: ${p => p.theme.spasing(1)};\n  border: none;\n  background-color: ${p => p.theme.color.bg};\n  &:hover {\n    background-color: ${p => p.theme.color.accent};\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logInUser } from '../../redux/auth/authOperation';\nimport { Form, Item, Button, Field } from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const hanleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(logInUser({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Item>\n        Email\n        <Field\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          required\n          onChange={hanleChange}\n        />\n      </Item>\n      <Item>\n        Password\n        <Field\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          required\n          autoComplete=\"off\"\n          onChange={hanleChange}\n        />\n      </Item>\n      <Button type=\"submit\">Log In</Button>\n    </Form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","p","theme","spasing","Item","_templateObject2","Field","_templateObject3","color","accent","Button","_templateObject4","bg","LoginForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","hanleChange","_ref","_ref$target","target","name","value","_jsxs","onSubmit","e","preventDefault","logInUser","autoComplete","children","_jsx","type","required","onChange"],"sourceRoot":""}